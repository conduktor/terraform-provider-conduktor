{
  "provider": {
    "name": "conduktor",
    "schema": {
      "attributes": [
        {
          "name": "mode",
          "string": {
            "description": "The mode for the Terraform provider. When using one provider, can be set to either `console` or `gateway`. Alternatively for multi-provider configuration, set both providers with an an alias, and set the relevant alias at the resource level. May also be set using environment variable `CDK_PROVIDER_MODE`.  \nSee [documentation](https://github.com/conduktor/terraform-provider-conduktor/blob/main/docs/index.md#multi-client-configuration-using-terraform-alias) for more information.",
            "optional_required": "required",
            "validators": [
              {
                "custom": {
                  "imports": [
                    {
                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                    },
                    {
                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                    }
                  ],
                  "schema_definition": "stringvalidator.OneOf(validation.ValidProviderMode...)"
                }
              }
            ]
          }
        },
        {
          "name": "base_url",
          "string": {
            "description": "The URL of either Conduktor Console or Gateway, depending on the `mode`. May be set using environment variable `CDK_CONSOLE_BASE_URL` or `CDK_BASE_URL` for Console, `CDK_GATEWAY_BASE_URL` or `CDK_BASE_URL` for Gateway. Required either here or in the environment.",
            "optional_required": "optional"
          }
        },
        {
          "name": "api_token",
          "string": {
            "description": "The API token to authenticate with the Conduktor Console API. May be set using environment variable `CDK_API_TOKEN` or `CDK_API_KEY`. If not provided, admin_user and admin_password will be used to authenticate. See [documentation](https://docs.conduktor.io/platform/reference/api-reference/#generate-an-api-key) for more information. Not used if `mode` is Gateway.",
            "optional_required": "optional",
            "sensitive": true
          }
        },
        {
          "name": "admin_user",
          "string": {
            "description": "The login credentials of the admin user. May be set using environment variable `CDK_CONSOLE_USER`, `CDK_ADMIN_EMAIL` or `CDK_ADMIN_USER` for Console, `CDK_GATEWAY_USER` or `CDK_ADMIN_USER` for Gateway. Required if admin_password is set. If not provided and `mode` is Console, the API token will be used to authenticate.",
            "optional_required": "optional"
          }
        },
        {
          "name": "admin_password",
          "string": {
            "description": "The password of the admin user. May be set using environment variable `CDK_CONSOLE_PASSWORD` or `CDK_ADMIN_PASSWORD` for Console, `CDK_GATEWAY_PASSWORD` or `CDK_ADMIN_PASSWORD` for Gateway. Required if admin_user is set. If not provided, the API token will be used to authenticater.",
            "optional_required": "optional",
            "sensitive": true
          }
        },
        {
          "name": "cacert",
          "string": {
            "description": "Root CA certificate in PEM format to verify the Conduktor certificate. May be set using environment variable `CDK_CONSOLE_CACERT` or `CDK_CACERT` for Console, `CDK_GATEWAY_CACERT` or `CDK_CACERT` for Gateway. If not provided, the system's root CA certificates will be used.",
            "optional_required": "optional"
          }
        },
        {
          "name": "insecure",
          "bool": {
            "description": "Skip TLS verification flag. May be set using environment variable `CDK_CONSOLE_INSECURE` or `CDK_INSECURE` for Console, `CDK_GATEWAY_INSECURE` or `CDK_INSECURE` for Gateway.",
            "optional_required": "optional"
          }
        },
        {
          "name": "cert",
          "string": {
            "description": "Cert in PEM format to authenticate using client certificates. May be set using environment variable `CDK_CONSOLE_CERT` or `CDK_CERT` for Console, `CDK_GATEWAY_CERT` or `CDK_CERT` for Gateway. Must be used with key. If key is provided, cert is required. Useful when Console is behind a reverse proxy with client certificate authentication.",
            "optional_required": "optional"
          }
        },
        {
          "name": "key",
          "string": {
            "description": "Key in PEM format to authenticate using client certificates. May be set using environment variable `CDK_CONSOLE_KEY` or `CDK_KEY` for Console, `CDK_GATEWAY_KEY` or `CDK_KEY` for Gateway. Must be used with cert. If cert is provided, key is required. Useful when Console is behind a reverse proxy with client certificate authentication.",
            "optional_required": "optional"
          }
        }
      ]
    }
  },
  "datasources": [],
  "resources": [
    {
      "name": "console_application_v1",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Application name, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Application specification",
              "attributes": [
                {
                  "name": "title",
                  "string": {
                    "description": "Application title",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "description",
                  "string": {
                    "description": "Application description",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "owner",
                  "string": {
                    "description": "Application owner, must be a valid Console Group id",
                    "computed_optional_required": "required"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_application_instance_v1",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Application Instance name, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "application",
            "string": {
              "description": "Reference to the application this instance belongs to",
              "computed_optional_required": "required",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Application Instance specification",
              "attributes": [
                {
                  "name": "cluster",
                  "string": {
                    "description": "Valid Console Cluster. It's immutable (update will require the resource to be recreated).",
                    "computed_optional_required": "required",
                    "plan_modifiers": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                            }
                          ],
                          "schema_definition": "stringplanmodifier.RequiresReplace()"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "topic_policy_ref",
                  "set": {
                    "description": "Reference to the topic policy to apply to this instance",
                    "computed_optional_required": "optional",
                    "element_type": {
                      "string": {}
                    }
                  }
                },
                {
                  "name": "resources",
                  "set_nested": {
                    "description": "Set of all resources associated with this application instance",
                    "computed_optional_required": "computed_optional",
                    "nested_object": {
                      "attributes": [
                        {
                          "name": "type",
                          "string": {
                            "description": "Type of the resource, valid values are: TOPIC, CONSUMER_GROUP, SUBJECT, CONNECTOR",
                            "computed_optional_required": "required",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidResourceTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "name",
                          "string": {
                            "description": "Name of the resource",
                            "computed_optional_required": "required"
                          }
                        },
                        {
                          "name": "pattern_type",
                          "string": {
                            "description": "Pattern type for the resource, valid values are: LITERAL, PREFIXED",
                            "computed_optional_required": "required",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPatternTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "connect_cluster",
                          "string": {
                            "description": "Valid Connect Cluster linked to the Kafka Cluster `spec.cluster`. Only mandatory when type is CONNECTOR",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "ownership_mode",
                          "string": {
                            "description": "Ownership mode for the resource",
                            "computed_optional_required": "optional",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidOwnershipModes...)"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "name": "application_managed_service_account",
                  "bool": {
                    "description": "If set to true, the service account ACLs will be managed by the Application owners directly instead of being synchrornized by the ApplicationInstance component. See [documentation](https://docs.conduktor.io/platform/reference/resource-reference/self-service/#application-managed-service-account) for more information.",
                    "computed_optional_required": "computed_optional"
                  }
                },
                {
                  "name": "service_account",
                  "string": {
                    "description": "Service account associated with this application instance",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "default_catalog_visibility",
                  "string": {
                    "description": "Default catalog visibility for the application instance, valid values are: PRIVATE, PUBLIC",
                    "computed_optional_required": "optional",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            },
                            {
                              "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                            }
                          ],
                          "schema_definition": "stringvalidator.OneOf(validation.ValidCatalogVisibilities...)"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_group_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Group name, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Group specification",
              "attributes": [
                {
                  "name": "display_name",
                  "string": {
                    "description": "Group display name",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "description",
                  "string": {
                    "description": "Group description",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "external_groups",
                  "set": {
                    "description": "Set of external groups from SSO mapped to this group",
                    "computed_optional_required": "computed_optional",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    }
                  }
                },
                {
                  "name": "members",
                  "set": {
                    "description": "Set of members of the group",
                    "computed_optional_required": "computed_optional",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    },
                    "validators": []
                  }
                },
                {
                  "name": "members_from_external_groups",
                  "set": {
                    "description": "Set of members of the group",
                    "computed_optional_required": "computed",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    },
                    "validators": []
                  }
                },
                {
                  "name": "permissions",
                  "set_nested": {
                    "description": "Set of all group permissions",
                    "computed_optional_required": "computed_optional",
                    "nested_object": {
                      "attributes": [
                        {
                          "name": "name",
                          "string": {
                            "description": "Name of the resource to apply permission could be a topic, a cluster, a consumer group, etc. depending on resource_type",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "resource_type",
                          "string": {
                            "description": "Type of the resource to apply permission on valid values are: CLUSTER, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB, PLATFORM, SUBJECT, TOPIC",
                            "computed_optional_required": "required",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "cluster",
                          "string": {
                            "description": "Name of the cluster to apply permission, only required if resource_type is TOPIC, SUBJECT, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "kafka_connect",
                          "string": {
                            "description": "Name of the Kafka Connect to apply permission, only required if resource_type is KAFKA_CONNECT",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "pattern_type",
                          "string": {
                            "description": "Type of the pattern to apply permission on valid values are: LITERAL, PREFIXED",
                            "computed_optional_required": "optional",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionPatternTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "permissions",
                          "set": {
                            "description": "Set of all permissions to apply on the resource. See https://docs.conduktor.io/platform/reference/resource-reference/console/#permissions for more details",
                            "computed_optional_required": "required",
                            "element_type": {
                              "string": {}
                            },
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
                                    },
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "setvalidator.ValueStringsAre(stringvalidator.OneOf(validation.ValidPermissions ...))"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_kafka_cluster_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Kafka cluster name, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "labels",
            "map": {
              "description": "Kafka cluster labels",
              "computed_optional_required": "computed_optional",
              "element_type": {
                "string": {}
              }
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Kafka cluster specification",
              "attributes": [
                {
                  "name": "display_name",
                  "string": {
                    "description": "Kafka cluster display name",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "bootstrap_servers",
                  "string": {
                    "description": "List of bootstrap servers for the Kafka cluster separated by comma",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "properties",
                  "map": {
                    "description": "Kafka cluster properties",
                    "computed_optional_required": "optional",
                    "element_type": {
                      "string": {}
                    }
                  }
                },
                {
                  "name": "color",
                  "string": {
                    "description": "Kafka cluster icon color in hexadecimal format like `#FF0000`",
                    "computed_optional_required": "computed_optional"
                  }
                },
                {
                  "name": "icon",
                  "string": {
                    "description": "Kafka cluster icon. List of available icons can be found [here](https://docs.conduktor.io/platform/reference/resource-reference/console/#icon-sets)",
                    "computed_optional_required": "computed_optional"
                  }
                },
                {
                  "name": "ignore_untrusted_certificate",
                  "bool": {
                    "description": "Ignore untrusted certificate for Kafka cluster",
                    "computed_optional_required": "computed_optional",
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                          }
                        ],
                        "schema_definition": "booldefault.StaticBool(false)"
                      }
                    }
                  }
                },
                {
                  "name": "schema_registry",
                  "single_nested": {
                    "description": "Schema registry configuration. One of `confluent_like`, `glue`",
                    "computed_optional_required": "optional",
                    "attributes": [
                      {
                        "name": "confluent_like",
                        "single_nested": {
                          "description": "Confluent like schema registry configuration",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "url",
                              "string": {
                                "description": "Schema registry URL. Required if type is `ConfluentLike`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "properties",
                              "string": {
                                "description": "Schema registry properties. Only used if type is `ConfluentLike`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "ignore_untrusted_certificate",
                              "bool": {
                                "description": "Ignore untrusted certificate for schema registry. Only used if type is `ConfluentLike`",
                                "computed_optional_required": "computed_optional",
                                "default": {
                                  "custom": {
                                    "imports": [
                                      {
                                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                                      }
                                    ],
                                    "schema_definition": "booldefault.StaticBool(false)"
                                  }
                                }
                              }
                            },
                            {
                              "name": "security",
                              "single_nested": {
                                "custom_type_name": "confluent_security",
                                "description": "Confluent Schema registry security configuration. One of `basic_auth`, `bearer_token`, `ssl_auth`. If none provided, no security is used.",
                                "computed_optional_required": "optional",
                                "attributes": [
                                  {
                                    "name": "basic_auth",
                                    "single_nested": {
                                      "description": "Basic auth schema registry security configuration.",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "username",
                                          "string": {
                                            "description": "Schema registry basic auth username.",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "password",
                                          "string": {
                                            "description": "Schema registry basic auth password.",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "bearer_token",
                                    "single_nested": {
                                      "description": "Bearer token schema registry security configuration.",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "token",
                                          "string": {
                                            "description": "Schema registry bearer token.",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "ssl_auth",
                                    "single_nested": {
                                      "description": "SSL auth (mTLS) schema registry security configuration.",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "key",
                                          "string": {
                                            "description": "Schema registry SSL auth private key PEM.",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        },
                                        {
                                          "name": "certificate_chain",
                                          "string": {
                                            "description": "Schema registry SSL auth certificate chain PEM.",
                                            "computed_optional_required": "required"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "glue",
                        "single_nested": {
                          "description": "AWS Glue schema registry configuration",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "registry_name",
                              "string": {
                                "description": "Glue Schema registry name",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "region",
                              "string": {
                                "description": "Glue Schema registry AWS region",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "security",
                              "single_nested": {
                                "custom_type_name": "glue_security",
                                "description": "Schema registry configuration. One of `credentials`, `from_context`, `from_role`, `iam_anywhere`",
                                "computed_optional_required": "required",
                                "attributes": [
                                  {
                                    "name": "credentials",
                                    "single_nested": {
                                      "description": "AWS credentials GLUE schema registry security configuration.",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "access_key_id",
                                          "string": {
                                            "description": "Glue Schema registry AWS access key ID.",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        },
                                        {
                                          "name": "secret_key",
                                          "string": {
                                            "description": "Glue Schema registry AWS secret key.",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "from_context",
                                    "single_nested": {
                                      "description": "AWS context GLUE schema registry security configuration.",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "profile",
                                          "string": {
                                            "description": "Glue Schema registry AWS profile name. ",
                                            "computed_optional_required": "required"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "from_role",
                                    "single_nested": {
                                      "description": "AWS role GLUE schema registry security configuration.",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "role",
                                          "string": {
                                            "description": "Glue Schema registry AWS role ARN.",
                                            "computed_optional_required": "required"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "iam_anywhere",
                                    "single_nested": {
                                      "description": "AWS IAM Anywhere GLUE schema registry security configuration.",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "trust_anchor_arn",
                                          "string": {
                                            "description": "Glue Schema registry AWS trust anchor ARN.",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "profile_arn",
                                          "string": {
                                            "description": "Glue Schema registry AWS profile ARN.",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "role_arn",
                                          "string": {
                                            "description": "Glue Schema registry AWS role ARN.",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "certificate",
                                          "string": {
                                            "description": "Glue Schema registry AWS certificate.",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "private_key",
                                          "string": {
                                            "description": "Glue Schema registry AWS private key.",
                                            "computed_optional_required": "required"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "kafka_flavor",
                  "single_nested": {
                    "description": "Kafka flavor configuration. One of `confluent`, `aiven`, `gateway`",
                    "computed_optional_required": "optional",
                    "attributes": [
                      {
                        "name": "confluent",
                        "single_nested": {
                          "description": "Confluent Kafka flavor configuration",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "key",
                              "string": {
                                "description": "Confluent API key.",
                                "computed_optional_required": "required",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "secret",
                              "string": {
                                "description": "Confluent API secret.",
                                "computed_optional_required": "required",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "confluent_environment_id",
                              "string": {
                                "description": "Confluent environment identifier.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "confluent_cluster_id",
                              "string": {
                                "description": "Confluent cluster identifier.",
                                "computed_optional_required": "required"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "aiven",
                        "single_nested": {
                          "description": "Aiven Kafka flavor configuration",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "api_token",
                              "string": {
                                "description": "Aiven API token.",
                                "computed_optional_required": "required",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "project",
                              "string": {
                                "description": "Aiven project name.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "service_name",
                              "string": {
                                "description": "Aiven service name.",
                                "computed_optional_required": "required"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "gateway",
                        "single_nested": {
                          "description": "Conduktor Gateway Kafka flavor configuration",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "url",
                              "string": {
                                "description": "Conduktor Gateway Admin API URL.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "user",
                              "string": {
                                "description": "Conduktor Gateway Admin user.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "password",
                              "string": {
                                "description": "Conduktor Gateway Admin password.",
                                "computed_optional_required": "required",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "virtual_cluster",
                              "string": {
                                "description": "Conduktor Gateway Virtual cluster name (default `passthrough`).",
                                "computed_optional_required": "computed_optional",
                                "default": {
                                  "custom": {
                                    "imports": [
                                      {
                                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                                      }
                                    ],
                                    "schema_definition": "stringdefault.StaticString(\"passthrough\")"
                                  }
                                },
                                "validators": [
                                  {
                                    "custom": {
                                      "imports": [
                                        {
                                          "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                        }
                                      ],
                                      "schema_definition": "validation.NonEmptyString()"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "ignore_untrusted_certificate",
                              "bool": {
                                "description": "Ignore untrusted certificate for Gateway Admin API.",
                                "computed_optional_required": "computed_optional",
                                "default": {
                                  "custom": {
                                    "imports": [
                                      {
                                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                                      }
                                    ],
                                    "schema_definition": "booldefault.StaticBool(false)"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_kafka_connect_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Kafka connect server name, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "cluster",
            "string": {
              "description": "Kafka cluster name linked with the current Kafka connect server. Must already exist in Conduktor Console",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "labels",
            "map": {
              "description": "Kafka connect server labels",
              "computed_optional_required": "computed_optional",
              "element_type": {
                "string": {}
              }
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Kafka connect server specification",
              "attributes": [
                {
                  "name": "display_name",
                  "string": {
                    "description": "Kafka connect server display name",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "urls",
                  "string": {
                    "description": "URL of a Kafka Connect cluster. **Multiple URLs are not supported for now**",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "headers",
                  "map": {
                    "description": "Key-Value HTTP headers to add to requests",
                    "computed_optional_required": "optional",
                    "element_type": {
                      "string": {}
                    }
                  }
                },
                {
                  "name": "ignore_untrusted_certificate",
                  "bool": {
                    "description": "Ignore untrusted certificate for Kafka connect server requests",
                    "computed_optional_required": "computed_optional",
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                          }
                        ],
                        "schema_definition": "booldefault.StaticBool(false)"
                      }
                    }
                  }
                },
                {
                  "name": "security",
                  "single_nested": {
                    "description": "Kafka connect server security configuration. One of `basic_auth`, `bearer_token`, `ssl_auth`",
                    "computed_optional_required": "optional",
                    "attributes": [
                      {
                        "name": "basic_auth",
                        "single_nested": {
                          "description": "Basic auth for Kafka connect server security configuration.",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "username",
                              "string": {
                                "description": "Kafka connect server basic auth username.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "password",
                              "string": {
                                "description": "Kafka connect server basic auth password.",
                                "computed_optional_required": "required",
                                "sensitive": true
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "bearer_token",
                        "single_nested": {
                          "description": "Bearer token for Kafka connect server security configuration.",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "token",
                              "string": {
                                "description": "Kafka connect server bearer token.",
                                "computed_optional_required": "required",
                                "sensitive": true
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "ssl_auth",
                        "single_nested": {
                          "description": "SSL auth (mTLS) for Kafka connect server security configuration.",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "key",
                              "string": {
                                "description": "Kafka connect server mTLS auth private key PEM.",
                                "computed_optional_required": "required",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "certificate_chain",
                              "string": {
                                "description": "Kafka connect server mTLS auth certificate chain PEM.",
                                "computed_optional_required": "required"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_topic_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Topic name, must be unique, acts as an ID for import. Any change will require the Topic to be destroyed and re-created",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "cluster",
            "string": {
              "description": "Kafka cluster name linked with Kafka topic. Must already exist in Conduktor Console. Any change will require the Topic to be destroyed and re-created",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "labels",
            "map": {
              "description": "Custom labels for the topic resource. Used in Conduktor's topic catalog and UI",
              "computed_optional_required": "computed_optional",
              "element_type": {
                "string": {}
              }
            }
          },
          {
            "name": "catalog_visibility",
            "string": {
              "description": "Catalog visibility for the topic, valid values are: PRIVATE, PUBLIC",
              "computed_optional_required": "optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      },
                      {
                        "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(validation.ValidCatalogVisibilities...)"
                  }
                }
              ]
            }
          },
          {
            "name": "description_is_editable",
            "bool": {
              "description": "is optional (defaults 'true'). Defines whether the description can be updated in the UI",
              "computed_optional_required": "computed_optional",
              "default": {
                "custom": {
                  "imports": [
                    {
                      "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                    }
                  ],
                  "schema_definition": "booldefault.StaticBool(true)"
                }
              }
            }
          },
          {
            "name": "description",
            "string": {
              "description": "Topic description",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "sql_storage",
            "single_nested": {
              "computed_optional_required": "optional",
              "attributes": [
                {
                  "name": "retention_time_in_second",
                  "int64": {
                    "description": "When storing a topic's data for Conduktor SQL search, how long to retain the topic data in the database",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "enabled",
                  "bool": {
                    "description": "Whether to store topic data in the database, to enable Conduktor SQL search of a topic",
                    "computed_optional_required": "computed_optional"
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Topic specification",
              "attributes": [
                {
                  "name": "partitions",
                  "int64": {
                    "description": "Immutable field. Any change will require the Topic to be destroyed and re-created",
                    "computed_optional_required": "required",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                            }
                          ],
                          "schema_definition": "int64validator.Between(1,2147483647)"
                        }
                      }
                    ],
                    "plan_modifiers": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
                            }
                          ],
                          "schema_definition": "int64planmodifier.RequiresReplace()"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "replication_factor",
                  "int64": {
                    "description": "Immutable field. Any change will require the Topic to be destroyed and re-created",
                    "computed_optional_required": "required",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                            }
                          ],
                          "schema_definition": "int64validator.Between(1,2147483647)"
                        }
                      }
                    ],
                    "plan_modifiers": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
                            }
                          ],
                          "schema_definition": "int64planmodifier.RequiresReplace()"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "configs",
                  "map": {
                    "description": "Must be valid Kafka Topic configs",
                    "computed_optional_required": "computed_optional",
                    "element_type": {
                      "string": {}
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_topic_policy_v1",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Topic Policy name, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Topic Policy specification",
              "attributes": [
                {
                  "name": "policies",
                  "map_nested": {
                    "description": "Map of policies",
                    "computed_optional_required": "required",
                    "nested_object": {
                      "attributes": [
                        {
                          "name": "allowed_keys",
                          "single_nested": {
                            "description": "Validates the keys are within an allowed key list",
                            "computed_optional_required": "optional",
                            "attributes": [
                              {
                                "name": "optional",
                                "bool": {
                                  "description": "If set to true, the policy is optional",
                                  "computed_optional_required": "computed_optional"
                                }
                              },
                              {
                                "name": "keys",
                                "set": {
                                  "computed_optional_required": "required",
                                  "element_type": {
                                    "string": {}
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "match",
                          "single_nested": {
                            "description": "Validates using Regular Expression",
                            "computed_optional_required": "optional",
                            "attributes": [
                              {
                                "name": "optional",
                                "bool": {
                                  "description": "If set to true, the policy is optional",
                                  "computed_optional_required": "computed_optional"
                                }
                              },
                              {
                                "name": "pattern",
                                "string": {
                                  "computed_optional_required": "required"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "none_of",
                          "single_nested": {
                            "description": "Validates against a list of predefined options",
                            "computed_optional_required": "optional",
                            "attributes": [
                              {
                                "name": "optional",
                                "bool": {
                                  "description": "If set to true, the policy is optional",
                                  "computed_optional_required": "computed_optional"
                                }
                              },
                              {
                                "name": "values",
                                "set": {
                                  "computed_optional_required": "required",
                                  "element_type": {
                                    "string": {}
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "one_of",
                          "single_nested": {
                            "description": "Validates against a list of predefined options",
                            "computed_optional_required": "optional",
                            "attributes": [
                              {
                                "name": "optional",
                                "bool": {
                                  "description": "If set to true, the policy is optional",
                                  "computed_optional_required": "computed_optional"
                                }
                              },
                              {
                                "name": "values",
                                "set": {
                                  "computed_optional_required": "required",
                                  "element_type": {
                                    "string": {}
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "range",
                          "single_nested": {
                            "description": "Validates a range of numbers",
                            "computed_optional_required": "optional",
                            "attributes": [
                              {
                                "name": "optional",
                                "bool": {
                                  "description": "If set to true, the policy is optional",
                                  "computed_optional_required": "computed_optional"
                                }
                              },
                              {
                                "name": "min",
                                "int64": {
                                  "computed_optional_required": "required"
                                }
                              },
                              {
                                "name": "max",
                                "int64": {
                                  "computed_optional_required": "required"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_user_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "User email, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^([\\\\w\\\\-_.]*[^.])@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "User specification",
              "attributes": [
                {
                  "name": "firstname",
                  "string": {
                    "description": "User firstname",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "lastname",
                  "string": {
                    "description": "User lastname",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "permissions",
                  "set_nested": {
                    "description": "Set of all user permissions",
                    "computed_optional_required": "computed_optional",
                    "nested_object": {
                      "attributes": [
                        {
                          "name": "name",
                          "string": {
                            "description": "Name of the resource to apply permission to could be a topic, a cluster, a consumer group, etc. depending on resource_type",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "resource_type",
                          "string": {
                            "description": "Type of the resource to apply permission on valid values are: CLUSTER, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB, PLATFORM, SUBJECT, TOPIC",
                            "computed_optional_required": "required",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "cluster",
                          "string": {
                            "description": "Name of the cluster to apply permission, only required if resource_type is TOPIC, SUBJECT, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "kafka_connect",
                          "string": {
                            "description": "Name of the Kafka Connect to apply permission, only required if resource_type is KAFKA_CONNECT",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "pattern_type",
                          "string": {
                            "description": "Type of the pattern to apply permission on valid values are: LITERAL, PREFIXED",
                            "computed_optional_required": "optional",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionPatternTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "permissions",
                          "set": {
                            "description": "Set of all permissions to apply on the resource. See https://docs.conduktor.io/platform/reference/resource-reference/console/#permissions for more details",
                            "computed_optional_required": "required",
                            "element_type": {
                              "string": {}
                            },
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
                                    },
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "setvalidator.ValueStringsAre(stringvalidator.OneOf(validation.ValidPermissions ...))"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "gateway_service_account_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "The name of the service account, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]{3,64}$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "vcluster",
            "string": {
              "description": "The name of the virtual cluster the service account belongs to. If not provided, the service account will be created in the default passthrough virtual cluster.",
              "computed_optional_required": "computed_optional",
              "default": {
                "custom": {
                  "imports": [
                    {
                      "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                    }
                  ],
                  "schema_definition": "stringdefault.StaticString(\"passthrough\")"
                }
              },
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "Service account specification",
              "attributes": [
                {
                  "name": "type",
                  "string": {
                    "description": "The type of the Service Account. Can only be either LOCAL or EXTERNAL.",
                    "computed_optional_required": "required",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            },
                            {
                              "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                            }
                          ],
                          "schema_definition": "stringvalidator.OneOf(validation.ValidServiceAccountTypes...)"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "external_names",
                  "set": {
                    "description": "Set of the external names of the service account. Required if spec.type is set to EXTERNAL. An external service account should have exactly one external name.",
                    "computed_optional_required": "computed_optional",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    },
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            },
                            {
                              "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                            }
                          ],
                          "schema_definition": "setvalidator.SizeAtMost(1)"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "gateway_token_v2",
      "schema": {
        "attributes": [
          {
            "name": "vcluster",
            "string": {
              "description": "The name of the virtual cluster to create the token for. If not provided, the token will be created in the default passthrough virtual cluster.",
              "computed_optional_required": "computed_optional",
              "default": {
                "custom": {
                  "imports": [
                    {
                      "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                    }
                  ],
                  "schema_definition": "stringdefault.StaticString(\"passthrough\")"
                }
              },
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "username",
            "string": {
              "description": "The username of the local service account to create the token for.",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "lifetime_seconds",
            "int64": {
              "description": "The life time of the token in milliseconds.",
              "computed_optional_required": "required",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                      }
                    ],
                    "schema_definition": "int64validator.Between(1,2147483647)"
                  }
                }
              ],
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
                      }
                    ],
                    "schema_definition": "int64planmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "token",
            "string": {
              "description": "Response token.",
              "computed_optional_required": "computed",
              "sensitive": true,
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "gateway_interceptor_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "The name of the interceptor, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]{3,64}$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "scope",
            "single_nested": {
              "computed_optional_required": "computed_optional",
              "description": "The targeting scope of the interceptor. See [documentation](https://docs.conduktor.io/gateway/reference/resources-reference/#interceptor-targeting)",
              "attributes": [
                {
                  "name": "vcluster",
                  "string": {
                    "description": "The name of the virtual cluster the interceptor will be applied to. Optional parameter for defining the scope",
                    "computed_optional_required": "computed_optional",
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                          }
                        ],
                        "schema_definition": "stringdefault.StaticString(\"passthrough\")"
                      }
                    },
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            }
                          ],
                          "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "group",
                  "string": {
                    "description": "The name of the group the interceptor will be applied to. Optional parameter for defining the scope",
                    "computed_optional_required": "optional",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            }
                          ],
                          "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "username",
                  "string": {
                    "description": "The username the interceptor will be applied to. Optional parameter for defining the scope",
                    "computed_optional_required": "optional",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            }
                          ],
                          "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9._-]+$\"), \"\")"
                        }
                      }
                    ]
                  }
                }
              ],
              "default": {
                "custom": {
                  "imports": [
                    {
                      "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/objectdefault"
                    },
                    {
                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/default"
                    }
                  ],
                  "schema_definition": "objectdefault.StaticValue(_default.DefaultScope)"
                }
              }
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "computed_optional_required": "required",
              "description": "The interceptor specification",
              "attributes": [
                {
                  "name": "comment",
                  "string": {
                    "description": "An optional comment for the interceptor.",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "plugin_class",
                  "string": {
                    "description": "The class of the plugin. Check the [interceptor catalog](https://docs.conduktor.io/gateway/category/interceptor-catalog/) for available plugins",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "priority",
                  "int64": {
                    "description": "The priority of the interceptor. Must be greater than 0",
                    "computed_optional_required": "required",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                            }
                          ],
                          "schema_definition": "int64validator.Between(1,2147483647)"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "config",
                  "string": {
                    "description": "Plugin configuration in JSON format. Check the [interceptor catalog](https://docs.conduktor.io/gateway/category/interceptor-catalog/) for details on the configuration",
                    "computed_optional_required": "required",
                    "custom_type": {
                      "import": {
                        "path": "github.com/hashicorp/terraform-plugin-framework-jsontypes/jsontypes"
                      },
                      "type": "jsontypes.NormalizedType{}",
                      "value_type": "jsontypes.Normalized"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "generic",
      "schema": {
        "attributes": [
          {
            "name": "kind",
            "string": {
              "description": "Resource kind",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "version",
            "string": {
              "description": "Resource version",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "Resource name",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "cluster",
            "string": {
              "description": "Resource parent cluster (if any)",
              "computed_optional_required": "optional",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "manifest",
            "string": {
              "description": "Resource manifest in yaml format. Use `yamlencode`/`yamldecode` function to normalize input and avoid dirty plan. See [reference documentation](https://docs.conduktor.io/platform/reference/resource-reference/console/#manifests) for more details",
              "computed_optional_required": "required",
              "custom_type": {
                "import": {
                  "path": "github.com/conduktor/terraform-provider-conduktor/internal/customtypes"
                },
                "type": "customtypes.YAMLNormalizedType{}",
                "value_type": "customtypes.YAMLNormalized"
              }
            }
          }
        ]
      }
    }
  ],
  "version": "0.1"
}
